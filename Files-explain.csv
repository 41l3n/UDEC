"File/Folder","Purpose & Function"
"artifacts/","Compiled smart contract ABIs and bytecode (auto-generated by Hardhat/solc). Needed for blockchain interaction."
"cache/","Build cache for Hardhat. Speeds up repeated contract compilations."
"config/","Configuration files for the project (e.g.,config.jsonfor app or blockchain settings)."
"contracts/","Solidity smart contracts. Example:EvidenceManager.sol(main evidence contract),Lock.sol(example/test contract)."
"controllers/","Express route controllers. Business logic for handling API requests."
"evidence.js","Logic for uploading, retrieving, downloading, and verifying evidence."
"user.js","Logic for user registration, login, and profile management."
"docs/","Documentation for your project (API docs, architecture, etc)."
"frontend/","(If present) Frontend code (React, Vue, etc.) for user interface."
"ignition/","Hardhat Ignition deployment scripts/configs (for advanced contract deployment)."
"middleware/","Express middleware functions (e.g., authentication, authorization)."
"auth.js","JWT authentication and role-based authorization middleware."
"migrations/","Sequelize migration files for creating/updating database schema."
"minIO/","(If present) MinIO-related scripts, configs, or utilities."
"models/","Sequelize models (ORM definitions for database tables)."
"database.js","(If present) Database connection setup (sometimes handled inmodels/index.js)."
"Evidence.js","Sequelize model for the Evidence table. Defines fields like hash, metadata, filePointer, etc."
"User.js","Sequelize model for the User table. Defines user fields and constraints."
"index.js","Initializes Sequelize, connects to DB, and loads all models for use throughout the app."
"node_modules/","Node.js dependencies (auto-generated)."
"public/","Static files served by Express (images, docs, etc)."
"routes/","Express route definitionsâ€”maps HTTP endpoints to controller functions."
"evidence.js","Defines routes for evidence upload, download, metadata, etc."
"user.js","Defines routes for user registration, login, profile, etc."
"scripts/","Deployment scripts for smart contracts (e.g.,deploy.ts)."
"seeders/","Sequelize seed files to populate the database with initial data."
"services/","Service modules for external integrations (blockchain, MinIO, etc)."
"blockchain.js","Functions to interact with the deployed smart contract (add evidence, verify, etc.)."
"minio.js","MinIO client setup and helper functions for file storage/retrieval."
"s3.js","(If present) AWS S3 integration (alternative to MinIO)."
"test/","Test scripts for contracts or backend logic."
"typechain-types/","TypeScript typings generated for smart contracts (by TypeChain/Hardhat)."
"views/","(If present) Templating files for server-side rendered pages (not always used)."
".env","Environment variables (secrets, DB connection, JWT secret, contract address, etc.)."
".gitignore","Files/folders to exclude from git version control."
"app.js","Main Express app entry point. Sets up middleware, routes, error handling, server start, etc."
"database.sqlite","SQLite database file (actual data storage for users, evidence, etc.)."
"hardhat.config.ts","Hardhat configuration for compiling/deploying smart contracts."
"package.json","Node.js project manifest (dependencies, scripts, metadata)."
"README.md","Project overview and usage instructions."
"tsconfig.json","TypeScript configuration (if using TypeScript)."